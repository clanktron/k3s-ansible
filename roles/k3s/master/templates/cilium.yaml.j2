---
# Source: cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUp0U1lQVHJCUm9QT0cyM3ZxU0FaZjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURrd016QTNOVE16TmxvWERUSTFNRGt3TWpBMwpOVE16Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueHlnVHE2QW5NS2dYTjBFbjVOeEdPY0syc3Q0bDNmdG1JZWtGL0F3TGZSY3o5NnIKQkcwTHgvSHZxbFRTWGQxVmZrV3VGSVlzcGRSS1ZZUDVLdXo5YVZuRFRGcnpIL0lxRmViQlZmM0tVcUorREI5NApLQWcxNnA0d2tXNHRBdFY5eW5pUk5rUEV3bnNFRFJvZE4xcEtDUTQ4czRBaksvVzlmTStIZlRqaTU2S25ISGF3ClpZR0RWTWcvUVh0UXdISzZZZlRXV1B5S3JZT0ZrbzQ0R3RNWFhjdS9DUmpocy9LUVVXKzBQVmFyeHVCTDV0TW0KVndPZE9VUEx1S2JTdUQ0SGJFaWs5NWFVZWZHUlZTSXZ3OWNHTk9xSTdjM0hZcVlmc2VMUHVFb1J0U2VXSkxwdAptZlF5RTNIeHZPVjZpWXdhWHZ5c3dxTWc5WGVhR1hoclNqRGdLUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSlp4U0tHSVZiSTRaV3VBVFBSbjUraytuK3dNTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmV4UU1uUjlxTTh5NHl6THRydGVPcVZvYkVoSnQ3UFpaMFU4cU5qSXFBVFdibVE3OTQxaGVsClNsQWcvUUJUTVMvRkJvK29yOXYzNGVPNjNvMDVkUTZEZndvRzBYNEJVMFRTN3IyK2Q3Wmtla082UmxxcTdjTnEKUVlyMkVRcmRoWkxvcU53dW9DenlKK2h4MWlQcURPaVUxZlpCYmdvRGY5eTQ5WFBJdkh0T2l5WWFucHV0cVEzcgpLSXBBVTBkQVhkZ1dpWm56UjFRQ0NLYWtQMU9hN3dEdVpPeHJZLzF3OTQ2L0tsOHlMRXJVTFQwRXZkWUtMUDdjCm9FZG95cVNRRlV4dldsODErRUFOMUZjVVVwYVdMc1JVODlmbmhsUEwzMkcrUUxVT29RR3JZWjM3R1luMUFJby8KUTU0ZXVlRE5Ua1NqNnV5aUtld2dUbE9ycE8zVlMyWXcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbnh5Z1RxNkFuTUtnWE4wRW41TnhHT2NLMnN0NGwzZnRtSWVrRi9Bd0xmUmN6OTZyCkJHMEx4L0h2cWxUU1hkMVZma1d1RklZc3BkUktWWVA1S3V6OWFWbkRURnJ6SC9JcUZlYkJWZjNLVXFKK0RCOTQKS0FnMTZwNHdrVzR0QXRWOXluaVJOa1BFd25zRURSb2ROMXBLQ1E0OHM0QWpLL1c5Zk0rSGZUamk1NktuSEhhdwpaWUdEVk1nL1FYdFF3SEs2WWZUV1dQeUtyWU9Ga280NEd0TVhYY3UvQ1JqaHMvS1FVVyswUFZhcnh1Qkw1dE1tClZ3T2RPVVBMdUtiU3VENEhiRWlrOTVhVWVmR1JWU0l2dzljR05PcUk3YzNIWXFZZnNlTFB1RW9SdFNlV0pMcHQKbWZReUUzSHh2T1Y2aVl3YVh2eXN3cU1nOVhlYUdYaHJTakRnS1FJREFRQUJBb0lCQUdubXY3d2U0WE4xQnc5SAovQi9LSHVpWVB0MUp1RVg0aUtlUkFHTCtkdExmWmpiazJhYmtmWWJqUE1WK0YxWnFUdER3eCtEWlBUWlNpZmRKCkU3ckNhaGlJcWpoVUFLWXVwRnhYYmk4eDhFdjM0elZtYks4WVorcDB4NWJFWWlrVXQ5amZUcWR6aTY1MStraE8KTFV2K1NIQ21qVGhiL1F6eFR1R1hyM0psUG9FMDhJNngrTlNxaXVxWFh0clBsTTNtOTQ1TTAxN1o5RFZYVWJhbQpCQUpmbjJNcGxianhBTGFySmE4bTRnUzhCdjNlUGhTL2I4dUpDeVdkeVpzWTV2blRKVjJZcHVjRnFkSmp5U2dUCmxLU1l1TU83eDIydFJHN1gxQjFmdjRGNGxHN1hNY3Q2cXJFajlkZkxZVkRRT2t2M1ROUC8yQnErL3h3eithNGQKemVheDdBRUNnWUVBeE9hKzEvY09PcllhdkJWa1B6aGF6NG5QZ1M1RS9JTFlRd2FUZkEyRHlmSUpLZkxBUVBweQpacGZySVJ2ZG8zblNpQldrY2xFMjBpUXZLRnZyNU5Ic1NBZHAvK0JLVW12bFlPc2RCQW12YUhSaXRvblhscVRGCm1XUmxqSERZd0ZEWTlMZG1aY0xVYitmemp3MlRmbklGM1Y4djE0ZkhheHcreTcwdkhZMHY2V0VDZ1lFQXp0NUIKMWtlYUkxV0p6RGNQOVNvZldid3BMRUJDZlJxcFZ5dVJPR0EwTFl4aW9nZnFrS3RZZ3NieFNHTVpJd0ZFaUpJcQpWV1lwYjJzaTNtdmJiajlmY0ViL1A5ZmRKTWZZdGNkeXdBVktyanFybEhRaDE2YlNsaGc1YWQyWFhFbXdLdHc1ClFYOUphUERxUzdPRForUGVkRlhEYXkwUFdIRy9WVHovSHY3bWc4a0NnWUVBbklyM1g2eEQyOW04RjV6S1Bwa0gKV2NrdStIMVl5NGtiZHU1YmcxMGJVZ3JqemozNUs2L3lGQzdqK1VhMlI2b3EvNVoxVDQzU0QvQkVyY21uR2h6cgp4YmhmUmRlRVAxTVk0cDBLVEpPR3FYMGVuaEdwSFZPUzVna3oweHhFdDJHUG03L1Q0VU9zc2V1dmNDUlRCMHlQCjdSZ29hU3JDR1I0enJyZVNKZVNDR3dFQ2dZQVZ4VHdtZ2RpTjJXV3NFU3Rqd0xBVjhJQmd3TTUrZmZ6T1NLNTYKd1YwY1lnYkxTSXY5OTVwVUFQM0pnV3hXeTc1YnBRNUJlSVBwenR1WGpzQkVCUFZWU3BONE00NTVYWExJQnBwago3T3FrRlZhVFEvbC95WFdtQ0J5YXNKQktUUkwySDhFQ3pKTjhNTVpuZXhmY0toWHlKa2h2a2dsb1pHZ2ZYMUQyCkFSdGZTUUtCZ1FDUThiY1J2SThkc1NmTzkxQktqV1Vvb08vWEFkdStkZzRVUVptdjhGWVVST2o0K1hpK0xjQU0KdU5mbUNrYUhQQjBZUzYwcDhLMTFVZ21MbUoza21pR0RwVk5Sakp0c29lbWlBU3EyVTd4TC9kaFpLNzFRM0FlYgpwdVVGTzhibVRHSmYvSkZmaWhpTm1iVEgwbXVpQWEwYXBsRS9UeVU0Vld6OG5wMDZZOTNCUWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUp0U1lQVHJCUm9QT0cyM3ZxU0FaZjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURrd016QTNOVE16TmxvWERUSTFNRGt3TWpBMwpOVE16Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueHlnVHE2QW5NS2dYTjBFbjVOeEdPY0syc3Q0bDNmdG1JZWtGL0F3TGZSY3o5NnIKQkcwTHgvSHZxbFRTWGQxVmZrV3VGSVlzcGRSS1ZZUDVLdXo5YVZuRFRGcnpIL0lxRmViQlZmM0tVcUorREI5NApLQWcxNnA0d2tXNHRBdFY5eW5pUk5rUEV3bnNFRFJvZE4xcEtDUTQ4czRBaksvVzlmTStIZlRqaTU2S25ISGF3ClpZR0RWTWcvUVh0UXdISzZZZlRXV1B5S3JZT0ZrbzQ0R3RNWFhjdS9DUmpocy9LUVVXKzBQVmFyeHVCTDV0TW0KVndPZE9VUEx1S2JTdUQ0SGJFaWs5NWFVZWZHUlZTSXZ3OWNHTk9xSTdjM0hZcVlmc2VMUHVFb1J0U2VXSkxwdAptZlF5RTNIeHZPVjZpWXdhWHZ5c3dxTWc5WGVhR1hoclNqRGdLUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSlp4U0tHSVZiSTRaV3VBVFBSbjUraytuK3dNTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmV4UU1uUjlxTTh5NHl6THRydGVPcVZvYkVoSnQ3UFpaMFU4cU5qSXFBVFdibVE3OTQxaGVsClNsQWcvUUJUTVMvRkJvK29yOXYzNGVPNjNvMDVkUTZEZndvRzBYNEJVMFRTN3IyK2Q3Wmtla082UmxxcTdjTnEKUVlyMkVRcmRoWkxvcU53dW9DenlKK2h4MWlQcURPaVUxZlpCYmdvRGY5eTQ5WFBJdkh0T2l5WWFucHV0cVEzcgpLSXBBVTBkQVhkZ1dpWm56UjFRQ0NLYWtQMU9hN3dEdVpPeHJZLzF3OTQ2L0tsOHlMRXJVTFQwRXZkWUtMUDdjCm9FZG95cVNRRlV4dldsODErRUFOMUZjVVVwYVdMc1JVODlmbmhsUEwzMkcrUUxVT29RR3JZWjM3R1luMUFJby8KUTU0ZXVlRE5Ua1NqNnV5aUtld2dUbE9ycE8zVlMyWXcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbnh5Z1RxNkFuTUtnWE4wRW41TnhHT2NLMnN0NGwzZnRtSWVrRi9Bd0xmUmN6OTZyCkJHMEx4L0h2cWxUU1hkMVZma1d1RklZc3BkUktWWVA1S3V6OWFWbkRURnJ6SC9JcUZlYkJWZjNLVXFKK0RCOTQKS0FnMTZwNHdrVzR0QXRWOXluaVJOa1BFd25zRURSb2ROMXBLQ1E0OHM0QWpLL1c5Zk0rSGZUamk1NktuSEhhdwpaWUdEVk1nL1FYdFF3SEs2WWZUV1dQeUtyWU9Ga280NEd0TVhYY3UvQ1JqaHMvS1FVVyswUFZhcnh1Qkw1dE1tClZ3T2RPVVBMdUtiU3VENEhiRWlrOTVhVWVmR1JWU0l2dzljR05PcUk3YzNIWXFZZnNlTFB1RW9SdFNlV0pMcHQKbWZReUUzSHh2T1Y2aVl3YVh2eXN3cU1nOVhlYUdYaHJTakRnS1FJREFRQUJBb0lCQUdubXY3d2U0WE4xQnc5SAovQi9LSHVpWVB0MUp1RVg0aUtlUkFHTCtkdExmWmpiazJhYmtmWWJqUE1WK0YxWnFUdER3eCtEWlBUWlNpZmRKCkU3ckNhaGlJcWpoVUFLWXVwRnhYYmk4eDhFdjM0elZtYks4WVorcDB4NWJFWWlrVXQ5amZUcWR6aTY1MStraE8KTFV2K1NIQ21qVGhiL1F6eFR1R1hyM0psUG9FMDhJNngrTlNxaXVxWFh0clBsTTNtOTQ1TTAxN1o5RFZYVWJhbQpCQUpmbjJNcGxianhBTGFySmE4bTRnUzhCdjNlUGhTL2I4dUpDeVdkeVpzWTV2blRKVjJZcHVjRnFkSmp5U2dUCmxLU1l1TU83eDIydFJHN1gxQjFmdjRGNGxHN1hNY3Q2cXJFajlkZkxZVkRRT2t2M1ROUC8yQnErL3h3eithNGQKemVheDdBRUNnWUVBeE9hKzEvY09PcllhdkJWa1B6aGF6NG5QZ1M1RS9JTFlRd2FUZkEyRHlmSUpLZkxBUVBweQpacGZySVJ2ZG8zblNpQldrY2xFMjBpUXZLRnZyNU5Ic1NBZHAvK0JLVW12bFlPc2RCQW12YUhSaXRvblhscVRGCm1XUmxqSERZd0ZEWTlMZG1aY0xVYitmemp3MlRmbklGM1Y4djE0ZkhheHcreTcwdkhZMHY2V0VDZ1lFQXp0NUIKMWtlYUkxV0p6RGNQOVNvZldid3BMRUJDZlJxcFZ5dVJPR0EwTFl4aW9nZnFrS3RZZ3NieFNHTVpJd0ZFaUpJcQpWV1lwYjJzaTNtdmJiajlmY0ViL1A5ZmRKTWZZdGNkeXdBVktyanFybEhRaDE2YlNsaGc1YWQyWFhFbXdLdHc1ClFYOUphUERxUzdPRForUGVkRlhEYXkwUFdIRy9WVHovSHY3bWc4a0NnWUVBbklyM1g2eEQyOW04RjV6S1Bwa0gKV2NrdStIMVl5NGtiZHU1YmcxMGJVZ3JqemozNUs2L3lGQzdqK1VhMlI2b3EvNVoxVDQzU0QvQkVyY21uR2h6cgp4YmhmUmRlRVAxTVk0cDBLVEpPR3FYMGVuaEdwSFZPUzVna3oweHhFdDJHUG03L1Q0VU9zc2V1dmNDUlRCMHlQCjdSZ29hU3JDR1I0enJyZVNKZVNDR3dFQ2dZQVZ4VHdtZ2RpTjJXV3NFU3Rqd0xBVjhJQmd3TTUrZmZ6T1NLNTYKd1YwY1lnYkxTSXY5OTVwVUFQM0pnV3hXeTc1YnBRNUJlSVBwenR1WGpzQkVCUFZWU3BONE00NTVYWExJQnBwago3T3FrRlZhVFEvbC95WFdtQ0J5YXNKQktUUkwySDhFQ3pKTjhNTVpuZXhmY0toWHlKa2h2a2dsb1pHZ2ZYMUQyCkFSdGZTUUtCZ1FDUThiY1J2SThkc1NmTzkxQktqV1Vvb08vWEFkdStkZzRVUVptdjhGWVVST2o0K1hpK0xjQU0KdU5mbUNrYUhQQjBZUzYwcDhLMTFVZ21MbUoza21pR0RwVk5Sakp0c29lbWlBU3EyVTd4TC9kaFpLNzFRM0FlYgpwdVVGTzhibVRHSmYvSkZmaWhpTm1iVEgwbXVpQWEwYXBsRS9UeVU0Vld6OG5wMDZZOTNCUWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUp0U1lQVHJCUm9QT0cyM3ZxU0FaZjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURrd016QTNOVE16TmxvWERUSTFNRGt3TWpBMwpOVE16Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueHlnVHE2QW5NS2dYTjBFbjVOeEdPY0syc3Q0bDNmdG1JZWtGL0F3TGZSY3o5NnIKQkcwTHgvSHZxbFRTWGQxVmZrV3VGSVlzcGRSS1ZZUDVLdXo5YVZuRFRGcnpIL0lxRmViQlZmM0tVcUorREI5NApLQWcxNnA0d2tXNHRBdFY5eW5pUk5rUEV3bnNFRFJvZE4xcEtDUTQ4czRBaksvVzlmTStIZlRqaTU2S25ISGF3ClpZR0RWTWcvUVh0UXdISzZZZlRXV1B5S3JZT0ZrbzQ0R3RNWFhjdS9DUmpocy9LUVVXKzBQVmFyeHVCTDV0TW0KVndPZE9VUEx1S2JTdUQ0SGJFaWs5NWFVZWZHUlZTSXZ3OWNHTk9xSTdjM0hZcVlmc2VMUHVFb1J0U2VXSkxwdAptZlF5RTNIeHZPVjZpWXdhWHZ5c3dxTWc5WGVhR1hoclNqRGdLUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSlp4U0tHSVZiSTRaV3VBVFBSbjUraytuK3dNTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmV4UU1uUjlxTTh5NHl6THRydGVPcVZvYkVoSnQ3UFpaMFU4cU5qSXFBVFdibVE3OTQxaGVsClNsQWcvUUJUTVMvRkJvK29yOXYzNGVPNjNvMDVkUTZEZndvRzBYNEJVMFRTN3IyK2Q3Wmtla082UmxxcTdjTnEKUVlyMkVRcmRoWkxvcU53dW9DenlKK2h4MWlQcURPaVUxZlpCYmdvRGY5eTQ5WFBJdkh0T2l5WWFucHV0cVEzcgpLSXBBVTBkQVhkZ1dpWm56UjFRQ0NLYWtQMU9hN3dEdVpPeHJZLzF3OTQ2L0tsOHlMRXJVTFQwRXZkWUtMUDdjCm9FZG95cVNRRlV4dldsODErRUFOMUZjVVVwYVdMc1JVODlmbmhsUEwzMkcrUUxVT29RR3JZWjM3R1luMUFJby8KUTU0ZXVlRE5Ua1NqNnV5aUtld2dUbE9ycE8zVlMyWXcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUwrVElqSkNXZ3N3OEUwTGRqZFRseDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURrd016QTNOVE16TmxvWERUSTFNRGt3TWpBMwpOVE16Tmxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZZTEZGQUFkVlh3dXdPTmdVNXJDZ20zSC80UUQKR0ZuMEprNHpxazR1S3lwSXBkYmtDT1RYaWh4eXl4SzUyZWo0Q0dFLzB6WDZrQk5mOE1EMWVMemNPZXVaYjNIbgowTzZaN3V1MjVndFlveXhENW96SjhySVZJMWR4M3ZwUWY2VDdkOGVTN0ZneWV4TWV3d3hCWFdHckd3L3IxWXlaCndteXA2U2RjRUpnNWdNby9tTVQxQVZtVkdZRmpNdld4Q3dIM3RxbXdzWTl3aVBnOHZEVmwwemxXcHJXVlRNTGwKYnpCNzRvWW1zeldUcUVsQ0VDUnp6a1czYkplOVBtSmpBRWFSSENWZUYzeUFvK1p3VS9qTU90enMwVHRpNkdkNwpYUFNMTWZKR2xiaXk2ak8rdkQ5bmh2dGpHME5veG5DMHV3R1llUDZvbTcveXk4NjR6SStGTHNtY1pRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU1djVWloaUZXeU9HVnJnRXowWitmcApQcC9zRERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRGZoUlc2WlVHR2tSZEJrMHovUG5BWU9aRXJuWko0cElNNVV2K0svOXlSM0JPb2UKVDdIKzNpRnJPaTRnR3VEWlhzQVBSTnhTbUNVbHl4Q1loNXFLREpjSnpQSyswYjRUTmJJWHRhYlVvVkw1bjkwNQpqWHNDdUcrMUsxeXRRSXM2T1hmSWtzMGNOQmEwenZ5NmVXK1M5TWN0WFhGUFVGK24vUHlnZnEzV0lVQ3FkMGx5CjVtTnFaMjhkUUZVRHRBZzlIVm04TjFQVk5GOHBaS2JvRmp4YlVZeG1VNFR4Q0huL2lSVisvRnpBU0lXZUlBVUkKWk9VZ1dHUjVOc2QxUWNaRitqTFpXTkljc2VpZGIzVmV6ZkhMeWdyVyt1S0lMeEJsQ1ZFRDNtTkZ0Q2Q4cjd0WApFM3hOQStlK0RKNzZoTGxSUXk1MTFCckEzMHJZRk5kQlV4Rlp1WFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdllMRkZBQWRWWHd1d09OZ1U1ckNnbTNILzRRREdGbjBKazR6cWs0dUt5cElwZGJrCkNPVFhpaHh5eXhLNTJlajRDR0UvMHpYNmtCTmY4TUQxZUx6Y09ldVpiM0huME82Wjd1dTI1Z3RZb3l4RDVvekoKOHJJVkkxZHgzdnBRZjZUN2Q4ZVM3Rmd5ZXhNZXd3eEJYV0dyR3cvcjFZeVp3bXlwNlNkY0VKZzVnTW8vbU1UMQpBVm1WR1lGak12V3hDd0gzdHFtd3NZOXdpUGc4dkRWbDB6bFdwcldWVE1MbGJ6Qjc0b1ltc3pXVHFFbENFQ1J6CnprVzNiSmU5UG1KakFFYVJIQ1ZlRjN5QW8rWndVL2pNT3R6czBUdGk2R2Q3WFBTTE1mSkdsYml5NmpPK3ZEOW4KaHZ0akcwTm94bkMwdXdHWWVQNm9tNy95eTg2NHpJK0ZMc21jWlFJREFRQUJBb0lCQUJ5RitqT3djTG5WSHhSWgpKTDV3cEtZTTcvVTlZVm5nOENaenpzTHJVWGVkdmFGNFhvb1lKM2phSDAwQlhJZTMwTjB5QmZFOFJxSTR5RS9zCk93WVpKdXh3MFg4OG5hK011ZzZEMjl0MENidEZobExGRGdCQlhYMGNSRDlUWFpwWXNxQ3NvU2lCZmRlWVlTRHEKVDB4R3p3SWJ1MXRBOWtPVkoxMjRWdHNJamw4Ynp3UkZ2MUgyd3hKQ0N0WEM3TFRiWUNWMTVodldvaXl4cW1BYgorTmNzUlV6eEp0cXlQSStJUlloSGx5SGd6NWZOdlZNeXFEaG1JR1RqMXVWOUNEellLZlRCcXZ5UDVqb0RDS1ZUCm9LVlQzMFgyL2ZFRTREZmpYRG5kMGdyNFlRb1E1dGVJcUZ3OEUvdlpKOE9ZdW9ldXprMDFhMi9LUmtjaGE0c2QKOWFQUnNHRUNnWUVBOTZEUkRTdVc4YW4wb2ZGb1RtNXlCakhQaHFDazNhQkNWckUzNDA3Yld1YUhKYVN0ZHZWMgp4ZENoQ1c2NWU2ZnRzZ1JPRmsyU0dIU2FXd2ozT21tUkxncituRE9xRFdIUS9qMlBLS1lTaGFoUXRQcGVXYlJPCnNUMTRUR0lxTE5tWkduN3hsZzR4YzVvK0tKekhjMUtMaSs5eEI1TlNTNmdEb2c5WmFqTUFHanNDZ1lFQXcrcjAKMmJsZG1rWVptV1c4cU10R2hiMlZqazJnZ1BlUFRnUXVlLy9GUTQ2WmVMRXcyMjZZa1U1alhXS1hkajhoRmxxOApIYTdXUmdjSlU5a2h1QUlLSU9vN1VaeUlRWllqZnI1RThUVXFudmFDV2RlS0NKN0w4b2JNVFhBZXQ5VENFUVhoCnBpaTlEcVpDWitjMWN6b2dXa3JCR2x1SmhreCswbEFyZnpnNUdkOENnWUVBbk5uWWtTY1RMWEFoN0pJbEo4ajkKb0w3Y1hNSlVxNjFmVjlwWk5EbzI1NVV0OWNJaHZrQXRRNCtxOFhhWk5xSmdCV3FFcTh2bXhtYlZmdVJtOVRENQpMTmo1L2FjY0IrMzFtNVVTb1FUUXBxaSt0bVFBYjRHdWRzWWc5UUVaQmQrdkF3RjF0VDY0UkNsblJnSklzOXVOCldNNEtJbXBHcm5WMkY2anhVanVMelJFQ2dZRUFrcHQyRXA5bDdoWmEvYkZtRmlIWGFpbE9peWlIM1RwajRJdTgKaFVvR3dlRXA4MmtWR0grUVo5dnkrMlRWMXNTeTY5bUdQK2dmckZPRHBWMHNvRmZXWUg4bldKRDhYYWdPYzcvSwpNMzRIb09EeTltd1dmUkRucVZzNTh4RGR5ODdJVXBqR0hPTUxaclQvcUdVYVdGbTg4QlJVb0hheldPNVJVT3h4ClFFaEFZcDBDZ1lBcVZtSEpVc2F3aVQwT2doY3FMaHc5ZjZFMUFBcDluQkw2MjBnSUptZUl1WVFFQTg0WlVBbkcKVWtUSDhoVkVpMDFVNG0xazNDekZhQnNoNjRxUmt1bEdRc1R3d3lhelVmNWN1bXNuQzhCenZ1anYyNGhhMlJlZwpVRTV0UEM3bVgwU1NxRWxHeVRVZ1V0MDhmN3NOaDVFNmFBcFMxZmVmaWJjeEthMlBnQk5KL3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUp0U1lQVHJCUm9QT0cyM3ZxU0FaZjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURrd016QTNOVE16TmxvWERUSTFNRGt3TWpBMwpOVE16Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueHlnVHE2QW5NS2dYTjBFbjVOeEdPY0syc3Q0bDNmdG1JZWtGL0F3TGZSY3o5NnIKQkcwTHgvSHZxbFRTWGQxVmZrV3VGSVlzcGRSS1ZZUDVLdXo5YVZuRFRGcnpIL0lxRmViQlZmM0tVcUorREI5NApLQWcxNnA0d2tXNHRBdFY5eW5pUk5rUEV3bnNFRFJvZE4xcEtDUTQ4czRBaksvVzlmTStIZlRqaTU2S25ISGF3ClpZR0RWTWcvUVh0UXdISzZZZlRXV1B5S3JZT0ZrbzQ0R3RNWFhjdS9DUmpocy9LUVVXKzBQVmFyeHVCTDV0TW0KVndPZE9VUEx1S2JTdUQ0SGJFaWs5NWFVZWZHUlZTSXZ3OWNHTk9xSTdjM0hZcVlmc2VMUHVFb1J0U2VXSkxwdAptZlF5RTNIeHZPVjZpWXdhWHZ5c3dxTWc5WGVhR1hoclNqRGdLUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSlp4U0tHSVZiSTRaV3VBVFBSbjUraytuK3dNTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmV4UU1uUjlxTTh5NHl6THRydGVPcVZvYkVoSnQ3UFpaMFU4cU5qSXFBVFdibVE3OTQxaGVsClNsQWcvUUJUTVMvRkJvK29yOXYzNGVPNjNvMDVkUTZEZndvRzBYNEJVMFRTN3IyK2Q3Wmtla082UmxxcTdjTnEKUVlyMkVRcmRoWkxvcU53dW9DenlKK2h4MWlQcURPaVUxZlpCYmdvRGY5eTQ5WFBJdkh0T2l5WWFucHV0cVEzcgpLSXBBVTBkQVhkZ1dpWm56UjFRQ0NLYWtQMU9hN3dEdVpPeHJZLzF3OTQ2L0tsOHlMRXJVTFQwRXZkWUtMUDdjCm9FZG95cVNRRlV4dldsODErRUFOMUZjVVVwYVdMc1JVODlmbmhsUEwzMkcrUUxVT29RR3JZWjM3R1luMUFJby8KUTU0ZXVlRE5Ua1NqNnV5aUtld2dUbE9ycE8zVlMyWXcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU1HS3E1dkJPaW96RTNnWWhGVjI3OGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURrd016QTNOVE16TmxvWERUSTFNRGt3TWpBMwpOVE16Tmxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUw0RHZEa2RWamI0UUFsOGN2cWEKNnVqWlVDZkx0aGlTbHpuc0krckVTdTJyY1FQNWdteXlxWVVXMXRHRnRJV1M3cCsvL0FXVElGOUlNemNhdE9KSgpiTFBwaEtCZmVJVGkzVHFQQmpsNXR0eWN3bU5obk1Pa0Z4MkJmSVl1dEp0cFJ0TkZIZWpJUzFzNnRxYXpSNFI5CllsRzhIZ2dMR1pEZGJ5TUxDZDgyNkhLaklueWtRbEJkM09HcE56Ly8zMGd0M2krUDc1Z3g0RGwxMlVMQTV5dHUKODFPSlMvdWk0VmJ6eHVLZlQ2TktWRHNIZy9sL0hHNnA2cjRkRUxObUo3NWd4YnUvYmExb3RqYitGUVZsR1JVNgptanNZYmpvMFhrUmVqM0JsY1dwbmIxbytrSUtlMjhCQldRREpDa2k5RlJDSHRpM2ZHWXQ0ZTVscXJKbzdGek1QCm1DMENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWxuRklvWWhWc2pobAphNEJNOUdmbjZUNmY3QXd3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUZmMWJndGVUU0p1UVE0eU4vZStpcUxPRHZIcUsKQTNGVUxoejF3WDVmdXdEWmlWSitSSEJIS2xldHNZNEFwdTRGS1lpRUgwanAzSmdhK0lJaUhsMmpKUWZxUmt1cwpnUDh4UG1nS0NaejhNd0d6cXo2UUlYelhOaUU4VkdEVUV4UVZESzloMjlpRzdtMGF3cXZrZzBuY2dmWFh5dkljCkJRdGFqTG5FSUNiTDV1dERyZlROcWgrb29IZ2l6VHh4a3hJNGJ5cmgzNi9qc3B3OFgrRlhQQUJiL0doTlRSbFEKM0xpSk5HOXZoNGtmNzBhM0tJNFdUd1Nid2VrUjk3cWVDbzZKcGxDVXQrZFZVOC9XQUE2OHduV053L3JrTTNWSgpxTUdObUFQdFNaOURudWs3aHdGUEE4Yi9BemcxY3VYM2diREFUVkVzaW9pYlVzaGRnUUhqa0VvaGhBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmdPOE9SMVdOdmhBQ1h4eStwcnE2TmxRSjh1MkdKS1hPZXdqNnNSSzdhdHhBL21DCmJMS3BoUmJXMFlXMGhaTHVuNy84QlpNZ1gwZ3pOeHEwNGtsc3MrbUVvRjk0aE9MZE9vOEdPWG0yM0p6Q1kyR2MKdzZRWEhZRjhoaTYwbTJsRzAwVWQ2TWhMV3pxMnByTkhoSDFpVWJ3ZUNBc1prTjF2SXdzSjN6Ym9jcU1pZktSQwpVRjNjNGFrM1AvL2ZTQzNlTDQvdm1ESGdPWFhaUXNEbksyN3pVNGxMKzZMaFZ2UEc0cDlQbzBwVU93ZUQrWDhjCmJxbnF2aDBRczJZbnZtREZ1Nzl0cldpMk52NFZCV1VaRlRxYU94aHVPalJlUkY2UGNHVnhhbWR2V2o2UWdwN2IKd0VGWkFNa0tTTDBWRUllMkxkOFppM2g3bVdxc21qc1hNdytZTFFJREFRQUJBb0lCQVFDMmxpSkZBN0szeVo3SApQc1hCbUNHSXRHRjRqQ0NqeGlENDhMZW12UTUvQ1ZIbER0cE1GdlljUkZFU0xwZkVEdWVyckREQkxwcFoxS2dhCkdGaWVaUTNHWitzZ3EvekVQTGQyc0w2N2RnRElSdjNudjRHQzRXZXcyNTlMMVErSmt3VVN1SVRBRGMrVGozeTUKL09ZSkl1N2FPWmptQTd5Q1hyV1BoK2pwaS9xYlJBMDhnMitKcVpIUkNBdXJlamttb3ZNSXc3WjVtOUUyTlQ3NApleEF4WjJBeTd4dTlBa3BDRmhRaHdDME0wLzhMS1MzNTJCdnJHQzRaNzlJZHM1T0J6YmMzc08xMGFzZ2IwQXdXCjcwckhEdUtwbzlZKzEyY0NNTW1aMnBVK21yT0ZmeGlQWmpPOEdCZm9WUlVxWUN1dUl2Wm9sbitsdFd2QjgwK0kKSWVHTHc0SkZBb0dCQU5jaDlvNTg1OUlhTzF5QlBtNyt5c0xMdjRwOStzWlhPTG5NRW5DQVczamlxWGNDS2I1SQo3VzJlSFFCS0g4M3JENDkvWHB5VU1iSVZXalo1bi91YUlRb1Y1R2ZUSUh6aC9ZclhJa3BEaHRFTEJ6VVJMVzNjCnB3QjhFeERwWVpsUDJ5YUdGQ296SDQzS28yUWtLYW4xakdlbDFSOUlIdXBvQTB2TUx2cVh2WnlYQW9HQkFPSWMKUTZURnhQYlVRRUx2aTZKbjZtbEthWWZSTFNKYTlsK0NyR1ZPOFRZSU5YWHNlaGhmelJoSm9EQjFJa1BQaU9SRwpBUHJFNTJGK0k0cHZCU1h2eThhYUI1SmVxRUdBSDhXNStBMUE4UEpQOHFkMjBZSUkvaVphUU9pbjRxc1puaWFHCktLTjhIYjJxTTZqTnZGZHc5TDVUNDF1dXQ1ZFZkeEE4bTczSkY5WGJBb0dBVjRFd0NYc1N6Q254VlVvWXZBc1YKTERDMTR6NGszOElnaDZwVEljR0Q4MksyclhxS3dpUmx0cjJtYkRTNlJRYkVtSWlsVWlrUklhOS90MEszYVI2agpLN2dGNUpsQzBLa1hlUDdTcXNSV3RQYTRZc1J1NXczbU85TTc2aGdUbzhtUWlWWG1JOWdSa0pvSTViV3o0TGJJCittdkFpVzNMYldzTFZDeGtPM2UzSDFjQ2dZRUF3UDhGRWVpcEJWSUlBOW81b29iMlE2YjdTcTFWekFRK1ZTblIKZ3F1T0llT0Ixa1RodGxwWFVrck55MjYvcjRlK1BiSXU5ZDBKN21KZmJiTHpmdjBlUDBlTC9QaUV2MXZnUXNKSQpvdTl5ZWpHWldpMkdDR3NxbTR2ZjZYWWJlSlhtTXRYQ2JFRHRsYzFvU01aSzQ0d0xxMFVwUkVGdWZXSzZ2UVl1Cm5TQy9FbzhDZ1lCdEFzMEtvYnRSc3hQU0xCT2ZPZU1sSmRsdm0vQ3dyamNaZWgweDdTbURQM0xvb243SHBad3cKb0JkdW5GSmNqdHhCb2dObUlyOXJ1ZVZTekN3VERZeTN2SjVnY045SDZyeFlpNHorUVdGU0V3Yy93cTNOdWpUKwplTkdiRC9NSEIzZUZvaWF4ak90a3NUYmdwZEVscmtBTG9VMjNFMFdxd2xoR3ErdjNYWG0yQlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "true"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  enable-ingress-controller: "true"
  enable-envoy-config: "true"
  enforce-ingress-https: "true"
  enable-ingress-secrets-sync: "true"
  ingress-secrets-namespace: "cilium-secrets"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    metrics-listen-address: ":9966"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status # To update ingress status with load balancer IP.
  verbs:
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-secrets
  namespace: "cilium-secrets"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-secrets
  namespace: "cilium-secrets"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-secrets
  namespace: "cilium-secrets"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-secrets
  namespace: "cilium-secrets"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/metrics-service.yaml
# We use a separate service from hubble-relay which can be exposed externally
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=true"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            add:
              # Use to set socket permission
              - CHOWN
              # Used to terminate envoy child process
              - KILL
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used since cilium creates raw sockets, etc...
              - NET_RAW
              # Used since cilium monitor uses mmap
              - IPC_LOCK
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Only used for 'mount' cgroup
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Required in order to access host's /etc/sysctl.d dir
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            # Most of the capabilities here are the same ones used in the
            # cilium-agent's container because this container can be used to
            # uninstall all Cilium resources, and therefore it is likely that
            # will need the same capabilities.
            add:
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.12.1@sha256:93d5aaeda37d59e6c4325ff05030d7b48fabde6576478e3fdbfb9bb4a68ec4a1
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "1289212ff9e442a308f0ffb43eee5ce9e4edf9a2a7fd36fe22f912be808c6800"
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.12.1@sha256:646582b22bf41ad29dd7739b12aae77455ee5757b9ee087f2d45d684afef5fa1"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
            - --debug
          ports:
            - name: grpc
              containerPort: 4245
            - name: prometheus
              containerPort: 9966
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.9.1@sha256:baff611b975cb12307a163c0e547e648da211384eabdafd327707ff2ec31cc24"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
          - name: hubble-ui-nginx-conf
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: tmp-dir
            mountPath: /tmp
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.9.1@sha256:c4b86e0d7a38d52c6ea3d9d7b17809e5212efd97494e8bd37c8466ddd68d42d0"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: cilium
spec:
  controller: cilium.io/ingress-controller
---
# Source: cilium/templates/hubble-relay/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: hubble-relay
  namespaceSelector:
    matchNames:
    - kube-system
  endpoints:
  - port: metrics
    interval: "10s"
    path: /metrics
